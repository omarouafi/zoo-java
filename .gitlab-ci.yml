# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: maven:3-openjdk-17

services:
  - name: vincensini/zoomysql
    alias: mysql

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  MYSQL_HOST: 'mysql'
  MYSQL_DATABASE: 'zoo'
  MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .m2/repository
    - .sonar/cache

stages:          # List of stages for jobs, and their order of execution
  - build
  - connect
  - test
  - package
  - quality
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - 'mvn clean'
    - 'mvn compile'

connect-job:
  stage: connect
  image: vincensini/zoomysql
  script:
    - echo "base chargee et accessible"

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - 'mvn test'
    - 'mvn $MAVEN_CLI_OPTS test'

quality-job:
  stage: quality
  script:
    - 'mvn verify'
    - 'mvn jacoco:report'
    - 'mvn sonar:sonar -Dsonar.projectKey=ouafi_zoo23'
  allow_failure: true
  only:
    - master

package-job:
  stage: package
  script:
    - mvn $MAVEN_CLI_OPTS package -Dmaven.test.skip=true
    - echo "Packaging the code"

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - mvn MAVEN_CLI_OPTS --batch-mode -s .m2/settings.xml --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
    - echo "Deploying application..."
    - echo "Application successfully deployed."


